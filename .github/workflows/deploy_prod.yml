name: "Deploy_PrivateGPT_Prod"
on:
  workflow_dispatch:

jobs:
##### PLAN A DEPLOYMENT (PROD) #####
  Plan_Production:
    runs-on: ubuntu-latest
    permissions:   #Permission is required if enabling TFSEC == true
      actions: read
      contents: read
      security-events: write
    if: ${{ github.actor != 'dependabot[bot]' }}   
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Terraform Plan Production
        uses: Pwd9000-ML/terraform-azurerm-plan@v1.2.6
        with:
          path: "."
          plan_mode: deploy
          tf_version: latest
          tf_vars_file: privategpt-prod.tfvars
          tf_key: privateGPTprod
          enable_TFSEC: true
          az_resource_group: Terraform-GitHub-Backend
          az_storage_acc: tfgithubbackendsa
          az_container_name: gh-terraform-privategpt-demo
          arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

##### APPLY A DEPLOYMENT PLAN (PROD) #####
  Deploy_Production:
    needs: Plan_Production
    runs-on: ubuntu-latest
    environment: production 
    steps:
      - name: Terraform Apply Production
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: Pwd9000-ML/terraform-azurerm-apply@v1.2.6
        with:
          plan_mode: deploy
          tf_version: latest
          tf_key: privateGPTprod
          az_resource_group: Terraform-GitHub-Backend
          az_storage_acc: tfgithubbackendsa
          az_container_name: gh-terraform-privategpt-demo
          arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}